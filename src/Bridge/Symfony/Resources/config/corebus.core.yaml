#
# Default sample configuration for corebus services.
#
# Usually, you probably will not have to make much modification if you with
# to keep a purely synchronous application.
#
# This file must be loaded before other defined in this same directory.
#
services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    #
    # Transactions manager
    #

    corebus.transaction.manager.null:
        class: MakinaCorpus\CoreBus\Implementation\Transaction\NullTransactionManager

    corebus.transaction.manager:
        alias: corebus.transaction.manager.null

    corebus.event_buffer.manager.array:
        class: MakinaCorpus\CoreBus\Implementation\EventBus\ArrayEventBufferManager

    corebus.event_buffer.manager:
        alias: corebus.event_buffer.manager.array

    #
    # Event bus and event listener locator.
    #

    corebus.event.listener.locator.container:
        class: MakinaCorpus\CoreBus\Implementation\EventBus\ContainerEventListenerLocator
        arguments: [[]]

    corebus.event.listener.locator:
        alias: corebus.event.listener.locator.container

    corebus.event.bus.null:
        class: MakinaCorpus\CoreBus\Implementation\EventBus\NullEventBus

    corebus.event.bus.memory:
        class: MakinaCorpus\CoreBus\Implementation\EventBus\MemoryEventBus
        arguments:
            - "@corebus.event.listener.locator"

    corebus.event.bus.internal:
        alias: corebus.event.bus.memory

    corebus.event.bus.external:
        alias: corebus.event.bus.null

    #
    # Command buses.
    #

    corebus.command.bus.passthrough:
        class: MakinaCorpus\CoreBus\Implementation\CommandBus\PassthroughCommandBus
        arguments:
            - "@corebus.command.consumer"
        tags:
            - { name: "monolog.logger", channel: "corebus" }

    corebus.command.bus.asynchronous:
        alias: corebus.command.bus.passthrough

    corebus.command.bus.synchronous:
        alias: corebus.command.bus.passthrough

    #
    # Authorization checker
    #

    corebus.command.authorization_checker:
        class: MakinaCorpus\CoreBus\Implementation\CommandBus\CommandAuthorizationCheckerChain
        arguments: []

    corebus.command.bus.asynchronous.authorization:
        class: MakinaCorpus\CoreBus\Implementation\CommandBus\AuthorizationCommandBusDecorator
        decorates: corebus.command.bus.asynchronous
        arguments: ['@corebus.command.authorization_checker', '@.inner']

    corebus.command.bus.synchronous.authorization:
        class: MakinaCorpus\CoreBus\Implementation\CommandBus\AuthorizationCommandBusDecorator
        decorates: corebus.command.bus.synchronous
        arguments: ['@corebus.command.authorization_checker', '@.inner']

    #
    # Command consumer and command handler locator.
    #

    corebus.command.handler.locator.container:
        class: MakinaCorpus\CoreBus\Implementation\CommandBus\ContainerCommandHandlerLocator
        arguments: [[]]

    corebus.command.handler_locator:
        alias: corebus.command.handler.locator.container

    corebus.command.consumer.default:
        class: MakinaCorpus\CoreBus\Implementation\CommandBus\DefaultCommandConsumer
        arguments:
            - "@corebus.command.handler_locator"
        tags:
            - { name: "monolog.logger", channel: "corebus" }

    corebus.command.consumer.transactional:
        class: MakinaCorpus\CoreBus\Implementation\CommandBus\TransactionalCommandConsumer
        arguments:
            - "@corebus.command.consumer.default"
            - "@corebus.event.bus.internal"
            - "@corebus.event.bus.external"
            - "@corebus.event_buffer.manager"
            - "@corebus.transaction.manager"
        tags:
            - { name: "monolog.logger", channel: "corebus" }

    corebus.command.consumer:
        alias: corebus.command.consumer.transactional

    #
    # Aliases to use and Symfony autowiring.
    #

    MakinaCorpus\CoreBus\CommandBus\CommandAuthorizationChecker:
        alias: corebus.command.authorization_checker

    MakinaCorpus\CoreBus\EventBus\EventBus:
        alias: corebus.command.consumer.transactional

    MakinaCorpus\CoreBus\CommandBus\CommandConsumer:
        alias: corebus.command.consumer

    MakinaCorpus\CoreBus\CommandBus\CommandBus:
        alias: corebus.command.bus.asynchronous

    MakinaCorpus\CoreBus\CommandBus\SynchronousCommandBus:
        alias: corebus.command.bus.synchronous
